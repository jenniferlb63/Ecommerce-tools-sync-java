sourceSets {
    benchmark {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/benchmark/java'
        }
        resources.srcDir 'src/benchmark/resources'
    }
}

configurations {
    benchmarkImplementation.extendsFrom implementation, testImplementation
}

task benchmark(type: Test) {
    doFirst{
        def grgit = grgit.clone(dir: 'git_temp_dir/', uri: scmProjectUrl, checkout: true,
                refToCheckout: '155-benchmark-tests')
    }


    testClassesDirs = sourceSets.benchmark.output.classesDirs
    classpath = sourceSets.benchmark.runtimeClasspath
    outputs.upToDateWhen { false }
}

task benchmarkCommit() {
    doLast{
        grgit.add(patterns: ['docs/BENCHMARKS.md'])
        grgit.commit(message: 'Add benchmark result.')
        grgit.push()
        grgit.close()
    }
}

benchmarkCommit.mustRunAfter benchmark