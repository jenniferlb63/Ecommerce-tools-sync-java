sudo: false
language: java
dist: trusty
jdk:
- openjdk8
install: true # skips travis' default installation step which executes gradle assemble.
jobs:
  include:
    - stage: benchmark#1
      #if: tag IS present TODO: THIS SHOULD BE COMMENTED OUT AFTER MERGING. (JUST FOR TESTING)
      script: ./gradlew clean setReleaseVersion benchmark benchmarkCommit
    - stage: benchmark#2
      if: tag IS present
      script: ./gradlew clean setReleaseVersion benchmark benchmarkCommit
    - stage: benchmark#3
      if: tag IS present
      script: ./gradlew clean setReleaseVersion benchmark benchmarkCommit
    - stage: benchmark#4
      if: tag IS present
      script: ./gradlew clean setReleaseVersion benchmark benchmarkCommit
    - stage: benchmark#5
      if: tag IS present
      script: ./gradlew clean setReleaseVersion benchmark benchmarkCommit
    - stage: full build
      script: ./gradlew clean setReleaseVersion build
# The before_cache and the cache steps cache the gradle installation on travis.
before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
after_success:
- bash <(curl -s https://codecov.io/bash)
- ./travis-publish.sh || travis_terminate 1
notifications:
  hipchat:
    template:
    - '<b><a href="https://github.com/commercetools/commercetools-sync-java">%{repository}</a></b>
    #<a href="%{build_url}">%{build_number}</a>
    <br>(%{branch} - <a href="%{compare_url}">%{commit}</a> : %{author}): <b>%{message}</b>
      <br><b>Build duration:</b> %{duration}.'
    format: html
    on_pull_requests: false
    on_success: change
    on_failure: always
    rooms:
      secure: GamqCH6vg3VJJ8XypH+QvDtlfK8H3z+jhNswp4G1l4TLkkDIBwEC5Iu8GwQm3TjrgrNYGGNAtgcFrDNOJzDdQtsrYv7NyvJnHXzznX4kzjrIa8o+NmYpxw07s7g/2kzcRTzvOC7KvGz++a0BDMLa2Di/0UVM/Q12BFli0JuDxoVEzcD7ubqcv2MjEIjJcDRf7wrx4QPMcTZIvPPBC6Z/h7lU0WnQHeEj5qb3Uim4Z0qdzRgjxSM++37cCsiFxcV85ff0e9BmTeV2sdmS/GmCTY8bJ/FwH1ZuLUhbvwlOikHMJqvVxkeqeDto0p/sECn0tMkdS3dwx/T8L9G4YUHlL4N46khnNLZYISqUk36ncW+lGxe5sQU+kRL9Yv0Lk5BIB3vw00XMpIoKz+lsN7mgkTCyfeMM5+jgFk7gEnR/PtVulO2XIj1xwskip+EnyEZR7G+qzeGGPSMTJs2LzoEWYKwCh2aAQjYOLX4H3Gt6mhHkB4qIR51m2PINQYhQE/WXKGnJ4c+wOHavRo7foSYyWnB7CnyNkZZofqYqlTCQkIumkJ3vTGQmu+rkRSJ+NXoY6h1w0Bzz6GktCVofWd3Yg6h3eZ3Ge2HV73VCsyuPn72BZ4d+8/zpm6cGvLEJ6UnSbzDUrVHybaaAXaJcWYvKL6yVsWjXRR93EVKEp4ajdMs=
